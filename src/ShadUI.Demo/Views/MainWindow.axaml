<controls:Window
    x:Class="ShadUI.Demo.Views.MainWindow"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:contents="clr-namespace:ShadUI.Contents;assembly=ShadUI"
    xmlns:controls="clr-namespace:ShadUI.Controls;assembly=ShadUI"
    xmlns:converters="clr-namespace:ShadUI.Demo.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:demo="clr-namespace:ShadUI.Demo"
    xmlns:dialogs="clr-namespace:ShadUI.Dialogs;assembly=ShadUI"
    xmlns:extensions="clr-namespace:ShadUI.Extensions;assembly=ShadUI"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toasts="clr-namespace:ShadUI.Toasts;assembly=ShadUI"
    xmlns:ui="clr-namespace:ShadUI;assembly=ShadUI"
    xmlns:viewModels="clr-namespace:ShadUI.Demo.ViewModels"
    x:Name="Window"
    Title="ShadUI App"
    Width="1024"
    Height="768"
    d:DesignWidth="800"
    x:DataType="viewModels:MainWindowViewModel"
    Icon="/Assets/favicon.ico"
    IsMenuVisible="True"
    TitleFontWeight="SemiBold"
    mc:Ignorable="d">
    <controls:Window.DataTemplates>
        <ui:DataTemplateInclude Source="avares://ShadUI.Demo/Views/PageDataTemplates.axaml" />
    </controls:Window.DataTemplates>
    <controls:Window.LogoContent>
        <PathIcon
            Width="14"
            Height="14"
            Margin="8,8,0,8"
            Data="{x:Static contents:Icons.Logo}" />
    </controls:Window.LogoContent>
    <controls:Window.Hosts>
        <dialogs:DialogHost Manager="{Binding DialogManager}" Owner="{Binding RelativeSource={RelativeSource AncestorType=controls:Window}}" />
    </controls:Window.Hosts>
    <controls:Window.MenuItems>
        <MenuItem Header="File">
            <MenuItem
                Width="175"
                Command="{Binding ShowAboutCommand}"
                Header="About">
                <MenuItem.Icon>
                    <TextBlock Classes="LucideIcon" Text="&#57599;" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem
                Width="175"
                Command="{Binding TryCloseCommand}"
                Header="Close" />
        </MenuItem>
    </controls:Window.MenuItems>
    <controls:Window.RightWindowTitleBarControls>
        <Button
            Width="30"
            Height="30"
            Background="{DynamicResource SidebarBackgroundColor}"
            Classes="Icon"
            Command="{Binding SwitchThemeCommand}"
            CornerRadius="{DynamicResource MdCornerRadius}"
            ToolTip.Tip="Switch Theme">
            <TextBlock Classes="LucideIcon" Text="{Binding CurrentTheme, Converter={x:Static converters:ThemeModeConverters.ToLucideIcon}}" />
        </Button>
        <Button
            x:Name="FullscreenButton"
            Width="30"
            Height="30"
            Margin="8,0,0,0"
            Background="{DynamicResource SidebarBackgroundColor}"
            Classes="Icon"
            CornerRadius="{DynamicResource MdCornerRadius}"
            IsVisible="{Binding #Window.WindowState, Converter={x:Static converters:WindowStateConverters.IsNotFullScreen}}"
            ToolTip.Tip="Fullscreen">
            <TextBlock Classes="LucideIcon" Text="&#58681;" />
        </Button>
        <Button
            x:Name="ExitFullscreenButton"
            Width="30"
            Height="30"
            Margin="8,0,0,0"
            Background="{DynamicResource SidebarBackgroundColor}"
            Classes="Icon"
            CornerRadius="{DynamicResource MdCornerRadius}"
            IsVisible="{Binding #Window.WindowState, Converter={x:Static converters:WindowStateConverters.IsFullScreen}}"
            ToolTip.Tip="Exit Fullscreen">
            <TextBlock Classes="LucideIcon" Text="&#57631;" />
        </Button>
    </controls:Window.RightWindowTitleBarControls>
    <Panel>
        <controls:SidebarMenu>
            <controls:SidebarMenu.Styles>
                <Style Selector="controls|SidebarMenuItem">
                    <Setter Property="ToolTip.Placement" Value="Top" />
                    <Setter Property="ToolTip.VerticalOffset" Value="-5" />
                </Style>
            </controls:SidebarMenu.Styles>
            <controls:SidebarMenu.BodyContent>
                <Panel>
                    <TransitioningContentControl Content="{Binding SelectedPage}" />
                    <controls:BusyArea IsBusy="{Binding IsBusy}">
                        <TextBlock Margin="0,8,0,0" Classes="Small Muted">
                            Loading...
                        </TextBlock>
                    </controls:BusyArea>
                </Panel>
            </controls:SidebarMenu.BodyContent>
            <controls:SidebarMenu.HeaderContent>
                <controls:Avatar
                    Width="80"
                    Height="80"
                    Margin="30,10,30,30"
                    Source="../Assets/user.png" />
            </controls:SidebarMenu.HeaderContent>
            <controls:SidebarMenu.Items>
                <controls:SidebarMenuItem
                    Classes="Compact"
                    Command="{Binding OpenDashboardCommand}"
                    Header="Dashboard"
                    ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Dashboard'}">
                    <controls:SidebarMenuItem.Icon>
                        <TextBlock Classes="LucideIcon" Text="&#57793;" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem
                    Classes="Compact"
                    Command="{Binding OpenThemeCommand}"
                    Header="Theming"
                    ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Theming'}">
                    <controls:SidebarMenuItem.Icon>
                        <TextBlock Classes="LucideIcon" Text="&#57821;" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem
                    Classes="Compact"
                    Command="{Binding OpenTypographyCommand}"
                    Header="Typography"
                    ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Typography'}">
                    <controls:SidebarMenuItem.Icon>
                        <TextBlock Classes="LucideIcon" Text="&#58887;" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <Separator />
                <controls:SidebarMenuItem
                    Classes="Compact"
                    Command="{Binding OpenAvatarCommand}"
                    Header="Avatar"
                    ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Avatar'}">
                    <controls:SidebarMenuItem.Icon>
                        <TextBlock Classes="LucideIcon" Text="&#58470;" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem
                    Classes="Compact"
                    Command="{Binding OpenButtonsCommand}"
                    Header="Buttons"
                    ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Buttons'}">
                    <controls:SidebarMenuItem.Icon>
                        <TextBlock Classes="LucideIcon" Text="&#57636;" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem
                    Classes="Compact"
                    Command="{Binding OpenCardsCommand}"
                    Header="Cards"
                    ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Cards'}">
                    <controls:SidebarMenuItem.Icon>
                        <TextBlock Classes="LucideIcon" Text="&#57506;" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem
                    Classes="Compact"
                    Command="{Binding OpenDataGridCommand}"
                    Header="Data Table"
                    ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Data Table'}">
                    <controls:SidebarMenuItem.Icon>
                        <TextBlock Classes="LucideIcon" Text="&#58628;" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem
                    Classes="Compact"
                    Command="{Binding OpenCheckBoxesCommand}"
                    Header="CheckBox"
                    ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='CheckBox'}">
                    <controls:SidebarMenuItem.Icon>
                        <TextBlock Classes="LucideIcon" Text="&#58568;" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem
                    Classes="Compact"
                    Command="{Binding OpenComboBoxesCommand}"
                    Header="ComboBox"
                    ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='ComboBox'}">
                    <controls:SidebarMenuItem.Icon>
                        <TextBlock Classes="LucideIcon" Text="&#57873;" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem
                    Classes="Compact"
                    Command="{Binding OpenDateCommand}"
                    Header="Date"
                    ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Date'}">
                    <controls:SidebarMenuItem.Icon>
                        <TextBlock Classes="LucideIcon" Text="&#57447;" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem
                    Classes="Compact"
                    Command="{Binding OpenDialogsCommand}"
                    Header="Dialogs"
                    ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Dialogs'}">
                    <controls:SidebarMenuItem.Icon>
                        <TextBlock Classes="LucideIcon" Text="&#57627;" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem
                    Classes="Compact"
                    Command="{Binding OpenInputsCommand}"
                    Header="Inputs"
                    ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Inputs'}">
                    <controls:SidebarMenuItem.Icon>
                        <TextBlock Classes="LucideIcon" Text="&#57957;" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem
                    Classes="Compact"
                    Command="{Binding OpenMenusCommand}"
                    Header="Menus"
                    ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Menus'}">
                    <controls:SidebarMenuItem.Icon>
                        <TextBlock Classes="LucideIcon" Text="&#58456;" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem
                    Classes="Compact"
                    Command="{Binding OpenSlidersCommand}"
                    Header="Sliders"
                    ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Sliders'}">
                    <controls:SidebarMenuItem.Icon>
                        <TextBlock Classes="LucideIcon" Text="&#58010;" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem
                    Classes="Compact"
                    Command="{Binding OpenSwitchCommand}"
                    Header="Switch"
                    ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Switch'}">
                    <controls:SidebarMenuItem.Icon>
                        <TextBlock Classes="LucideIcon" Text="&#57739;" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem
                    Classes="Compact"
                    Command="{Binding OpenTabsCommand}"
                    Header="Tabs"
                    ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Tabs'}">
                    <controls:SidebarMenuItem.Icon>
                        <TextBlock Classes="LucideIcon" Text="&#58411;" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem
                    Classes="Compact"
                    Command="{Binding OpenTimeCommand}"
                    Header="Time"
                    ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Time'}">
                    <controls:SidebarMenuItem.Icon>
                        <TextBlock Classes="LucideIcon" Text="&#57937;" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem
                    Classes="Compact"
                    Command="{Binding OpenToastCommand}"
                    Header="Toasts"
                    ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Toasts'}">
                    <controls:SidebarMenuItem.Icon>
                        <TextBlock Classes="LucideIcon" Text="&#57980;" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem
                    Classes="Compact"
                    Command="{Binding OpenToggleCommand}"
                    Header="Toggle"
                    ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Toggle'}">
                    <controls:SidebarMenuItem.Icon>
                        <TextBlock Classes="LucideIcon" Text="&#58751;" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem
                    Classes="Compact"
                    Command="{Binding OpenToolTipCommand}"
                    Header="Tooltip"
                    ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Tooltip'}">
                    <controls:SidebarMenuItem.Icon>
                        <TextBlock Classes="LucideIcon" Text="&#57626;" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem
                    Classes="Compact"
                    Command="{Binding OpenMiscellaneousCommand}"
                    Header="Miscellaneous"
                    ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Miscellaneous'}">
                    <controls:SidebarMenuItem.Icon>
                        <TextBlock Classes="LucideIcon" Text="&#58671;" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
            </controls:SidebarMenu.Items>
            <controls:SidebarMenu.FooterContent>
                <StackPanel
                    HorizontalAlignment="Center"
                    Orientation="Horizontal"
                    Spacing="16">
                    <StackPanel.Styles>
                        <Style Selector="Button">
                            <Setter Property="Command" Value="{Binding OpenUrlCommand}" />
                            <Setter Property="ToolTip.Placement" Value="Top" />
                            <Setter Property="ToolTip.VerticalOffset" Value="-5" />
                        </Style>
                        <Style Selector="PathIcon">
                            <Setter Property="Height" Value="16" />
                        </Style>
                    </StackPanel.Styles>
                    <Button
                        Classes="Icon"
                        CommandParameter="https://github.com/accntech/shad-ui"
                        ToolTip.Tip="Source repository">
                        <extensions:ButtonAssist.Icon>
                            <PathIcon Data="{x:Static demo:CustomIcons.Github}" Foreground="{DynamicResource PrimaryColor}" />
                        </extensions:ButtonAssist.Icon>
                    </Button>
                    <Button
                        Classes="Icon"
                        CommandParameter="https://github.com/accntech/shad-ui/blob/main/LICENSE"
                        ToolTip.Tip="Open source license">
                        <extensions:ButtonAssist.Icon>
                            <PathIcon Data="{x:Static demo:CustomIcons.License}" Foreground="{DynamicResource PrimaryColor}" />
                        </extensions:ButtonAssist.Icon>
                    </Button>
                    <Button
                        Classes="Icon"
                        CommandParameter="https://www.nuget.org/packages/ShadUI"
                        ToolTip.Tip="Nuget package">
                        <extensions:ButtonAssist.Icon>
                            <PathIcon Data="{x:Static demo:CustomIcons.Nuget}" Foreground="{DynamicResource PrimaryColor}" />
                        </extensions:ButtonAssist.Icon>
                    </Button>
                </StackPanel>
            </controls:SidebarMenu.FooterContent>
        </controls:SidebarMenu>
        <toasts:ToastHost Manager="{Binding ToastManager}" />
    </Panel>
</controls:Window>

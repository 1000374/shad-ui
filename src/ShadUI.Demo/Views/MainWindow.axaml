<controls:Window
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="clr-namespace:ShadUI.Controls;assembly=ShadUI"
    xmlns:contents="clr-namespace:ShadUI.Contents;assembly=ShadUI"
    xmlns:icons="clr-namespace:LucideAvalonia;assembly=LucideAvalonia"
    xmlns:viewModels="clr-namespace:ShadUI.Demo.ViewModels"
    xmlns:dialogs="clr-namespace:ShadUI.Dialogs;assembly=ShadUI"
    xmlns:toasts="clr-namespace:ShadUI.Toasts;assembly=ShadUI"
    xmlns:ui="clr-namespace:ShadUI;assembly=ShadUI"
    xmlns:extensions="clr-namespace:ShadUI.Extensions;assembly=ShadUI"
    xmlns:demo="clr-namespace:ShadUI.Demo"
    xmlns:converters="clr-namespace:ShadUI.Demo.Converters"
    mc:Ignorable="d" d:DesignWidth="800"
    x:Class="ShadUI.Demo.Views.MainWindow"
    x:DataType="viewModels:MainWindowViewModel"
    Width="1024" Height="768"
    Icon="/Assets/favicon.ico"
    TitleFontWeight="SemiBold"
    Title="ShadUI - Application Demo">
    <controls:Window.DataTemplates>
        <ui:DataTemplateInclude Source="avares://ShadUI.Demo/Views/PageDataTemplates.axaml" />
    </controls:Window.DataTemplates>
    <controls:Window.LogoContent>
        <PathIcon Margin="8,8,0,8" Width="14" Height="14" Data="{x:Static contents:Icons.Logo}" />
    </controls:Window.LogoContent>
    <controls:Window.Hosts>
        <dialogs:DialogHost Manager="{Binding DialogManager}"
                            Owner="{Binding RelativeSource={RelativeSource AncestorType=controls:Window}}" />
    </controls:Window.Hosts>
    <Panel>
        <controls:SidebarMenu>
            <controls:SidebarMenu.Styles>
                <Style Selector="controls|SidebarMenuItem">
                    <Setter Property="ToolTip.Placement" Value="Top" />
                    <Setter Property="ToolTip.VerticalOffset" Value="-5" />
                </Style>
            </controls:SidebarMenu.Styles>
            <controls:SidebarMenu.BodyContent>
                <Panel>
                    <TransitioningContentControl Content="{Binding SelectedPage}" />
                    <controls:BusyArea IsBusy="{Binding IsBusy}">
                        <TextBlock Classes="Small Muted" Margin="0,8,0,0">
                            Loading...
                        </TextBlock>
                    </controls:BusyArea>
                </Panel>
            </controls:SidebarMenu.BodyContent>
            <controls:SidebarMenu.HeaderContent>
                <controls:Avatar Margin="30,10,30,30" Width="80" Height="80"
                                 Source="../Assets/user.png" />
            </controls:SidebarMenu.HeaderContent>
            <controls:SidebarMenu.Items>
                <controls:SidebarMenuItem Header="Dashboard" Classes="Compact"
                                          Command="{Binding OpenDashboardCommand}"
                                          ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Dashboard'}">
                    <controls:SidebarMenuItem.Icon>
                        <icons:Lucide Icon="LayoutDashboard" StrokeThickness="1.5" Width="16" Height="16"
                                      StrokeBrush="{Binding RelativeSource={RelativeSource AncestorType=controls:SidebarMenuItem}, Path=Foreground}" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem Header="Typography" Classes="Compact"
                                          Command="{Binding OpenTypographyCommand}"
                                          ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Typography'}">
                    <controls:SidebarMenuItem.Icon>
                        <icons:Lucide Icon="TypeOutline" StrokeThickness="1.5" Width="16" Height="16"
                                      StrokeBrush="{Binding RelativeSource={RelativeSource AncestorType=controls:SidebarMenuItem}, Path=Foreground}" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem Header="Avatar" Classes="Compact"
                                          Command="{Binding OpenAvatarCommand}"
                                          ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Avatar'}">
                    <controls:SidebarMenuItem.Icon>
                        <icons:Lucide Icon="CircleUser" StrokeThickness="1.5" Width="16" Height="16"
                                      StrokeBrush="{Binding RelativeSource={RelativeSource AncestorType=controls:SidebarMenuItem}, Path=Foreground}" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem Header="Buttons" Classes="Compact"
                                          Command="{Binding OpenButtonsCommand}"
                                          ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Buttons'}">
                    <controls:SidebarMenuItem.Icon>
                        <icons:Lucide Icon="MousePointerClick" StrokeThickness="1.5" Width="16" Height="16"
                                      StrokeBrush="{Binding RelativeSource={RelativeSource AncestorType=controls:SidebarMenuItem}, Path=Foreground}" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem Header="Cards" Classes="Compact"
                                          Command="{Binding OpenCardsCommand}"
                                          ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Cards'}">
                    <controls:SidebarMenuItem.Icon>
                        <icons:Lucide Icon="Copy" StrokeThickness="1.5" Width="16" Height="16"
                                      StrokeBrush="{Binding RelativeSource={RelativeSource AncestorType=controls:SidebarMenuItem}, Path=Foreground}" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem Header="ComboBox" Classes="Compact"
                                          Command="{Binding OpenComboBoxesCommand}"
                                          ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='ComboBox'}">
                    <controls:SidebarMenuItem.Icon>
                        <icons:Lucide Icon="ChevronsUpDown" StrokeThickness="1.5" Width="16" Height="16"
                                      StrokeBrush="{Binding RelativeSource={RelativeSource AncestorType=controls:SidebarMenuItem}, Path=Foreground}" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem Header="Dialogs" Classes="Compact"
                                          Command="{Binding OpenDialogsCommand}"
                                          ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Dialogs'}">
                    <controls:SidebarMenuItem.Icon>
                        <icons:Lucide Icon="MessageSquare" StrokeThickness="1.5" Width="16" Height="16"
                                      StrokeBrush="{Binding RelativeSource={RelativeSource AncestorType=controls:SidebarMenuItem}, Path=Foreground}" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem Header="Inputs" Classes="Compact"
                                          Command="{Binding OpenInputsCommand}"
                                          ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Inputs'}">
                    <controls:SidebarMenuItem.Icon>
                        <icons:Lucide Icon="TextCursorInput" StrokeThickness="1.5" Width="16" Height="16"
                                      StrokeBrush="{Binding RelativeSource={RelativeSource AncestorType=controls:SidebarMenuItem}, Path=Foreground}" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem Header="Sliders" Classes="Compact"
                                          Command="{Binding OpenSlidersCommand}"
                                          ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Sliders'}">
                    <controls:SidebarMenuItem.Icon>
                        <icons:Lucide Icon="SlidersHorizontal" StrokeThickness="1.5" Width="16" Height="16"
                                      StrokeBrush="{Binding RelativeSource={RelativeSource AncestorType=controls:SidebarMenuItem}, Path=Foreground}" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem Header="Switch" Classes="Compact"
                                          Command="{Binding OpenToggleSwitchCommand}"
                                          ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Switch'}">
                    <controls:SidebarMenuItem.Icon>
                        <icons:Lucide Icon="ToggleLeft" StrokeThickness="1.5" Width="16" Height="16"
                                      StrokeBrush="{Binding RelativeSource={RelativeSource AncestorType=controls:SidebarMenuItem}, Path=Foreground}" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem Header="Tabs" Classes="Compact"
                                          Command="{Binding OpenTabsCommand}"
                                          ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Tabs'}">
                    <controls:SidebarMenuItem.Icon>
                        <icons:Lucide Icon="AppWindow" StrokeThickness="1.5" Width="16" Height="16"
                                      StrokeBrush="{Binding RelativeSource={RelativeSource AncestorType=controls:SidebarMenuItem}, Path=Foreground}" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem Header="Toasts" Classes="Compact"
                                          Command="{Binding OpenToastCommand}"
                                          ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Toasts'}">
                    <controls:SidebarMenuItem.Icon>
                        <icons:Lucide Icon="StretchHorizontal" StrokeThickness="1.5" Width="16" Height="16"
                                      StrokeBrush="{Binding RelativeSource={RelativeSource AncestorType=controls:SidebarMenuItem}, Path=Foreground}" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem Header="Tooltip" Classes="Compact"
                                          Command="{Binding OpenToolTipCommand}"
                                          ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Tooltip'}">
                    <controls:SidebarMenuItem.Icon>
                        <icons:Lucide Icon="MessageCircle" StrokeThickness="1.5" Width="16" Height="16"
                                      StrokeBrush="{Binding RelativeSource={RelativeSource AncestorType=controls:SidebarMenuItem}, Path=Foreground}" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
                <controls:SidebarMenuItem Header="Miscellaneous" Classes="Compact"
                                          Command="{Binding OpenMiscellaneousCommand}"
                                          ToolTip.Tip="{Binding IsMenuExpanded, RelativeSource={RelativeSource AncestorType=controls:SidebarMenu}, Converter={x:Static converters:BooleanToNullOrStringConverter.Instance}, ConverterParameter='Miscellaneous'}">
                    <controls:SidebarMenuItem.Icon>
                        <icons:Lucide Icon="Layers2" StrokeThickness="1.5" Width="16" Height="16"
                                      StrokeBrush="{Binding RelativeSource={RelativeSource AncestorType=controls:SidebarMenuItem}, Path=Foreground}" />
                    </controls:SidebarMenuItem.Icon>
                </controls:SidebarMenuItem>
            </controls:SidebarMenu.Items>
            <controls:SidebarMenu.FooterContent>
                <StackPanel Spacing="16" Orientation="Horizontal" HorizontalAlignment="Center">
                    <StackPanel.Styles>
                        <Style Selector="Button">
                            <Setter Property="Command" Value="{Binding OpenUrlCommand}" />
                            <Setter Property="ToolTip.Placement" Value="Top" />
                            <Setter Property="ToolTip.VerticalOffset" Value="-5" />
                        </Style>
                        <Style Selector="PathIcon">
                            <Setter Property="Height" Value="16" />
                        </Style>
                    </StackPanel.Styles>
                    <Button Classes="Icon"
                            ToolTip.Tip="Source repository"
                            CommandParameter="https://github.com/accntech/shad-ui">
                        <extensions:Button.Icon>
                            <PathIcon Data="{x:Static demo:CustomIcons.Github}"
                                      Foreground="{DynamicResource PrimaryColor}" />
                        </extensions:Button.Icon>
                    </Button>
                    <Button Classes="Icon"
                            ToolTip.Tip="Open source license"
                            CommandParameter="https://github.com/accntech/shad-ui/blob/main/LICENSE">
                        <extensions:Button.Icon>
                            <PathIcon Data="{x:Static demo:CustomIcons.License}"
                                      Foreground="{DynamicResource PrimaryColor}" />
                        </extensions:Button.Icon>
                    </Button>
                    <Button Classes="Icon"
                            ToolTip.Tip="Nuget package"
                            CommandParameter="https://www.nuget.org/packages/ShadUI">
                        <extensions:Button.Icon>
                            <PathIcon Data="{x:Static demo:CustomIcons.Nuget}" 
                                      Foreground="{DynamicResource PrimaryColor}" />
                        </extensions:Button.Icon>
                    </Button>
                </StackPanel>
            </controls:SidebarMenu.FooterContent>
        </controls:SidebarMenu>
        <toasts:ToastHost Manager="{Binding ToastManager}" />
    </Panel>
</controls:Window>
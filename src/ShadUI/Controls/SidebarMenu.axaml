<ResourceDictionary
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:ShadUI.Controls"
    xmlns:contents="clr-namespace:ShadUI.Contents"
    xmlns:extensions="clr-namespace:ShadUI.Extensions"
    xmlns:converters="clr-namespace:ShadUI.Converters">
    <ResourceDictionary.MergedDictionaries>
        <ResourceInclude Source="avares://ShadUI/Controls/Button.axaml" />
        <ResourceInclude Source="avares://ShadUI/Controls/Constants.axaml" />
    </ResourceDictionary.MergedDictionaries>
    <Design.PreviewWith>
        <controls:SidebarMenu>
            <controls:SidebarMenuItem Header="Header">
                <controls:SidebarMenuItem.Icon>
                    <PathIcon Width="13"
                              Height="13"
                              Data="{x:Static contents:Icons.Cross}" />
                </controls:SidebarMenuItem.Icon>
            </controls:SidebarMenuItem>
            <controls:SidebarMenuItem Header="Header">
                <controls:SidebarMenuItem.Icon>
                    <PathIcon Width="13"
                              Height="13"
                              Data="{x:Static contents:Icons.Cross}" />
                </controls:SidebarMenuItem.Icon>
                <Grid />
            </controls:SidebarMenuItem>
        </controls:SidebarMenu>
    </Design.PreviewWith>
    <ControlTheme x:Key="SideToggleButtonTheme" TargetType="ToggleButton">
        <Setter Property="Height" Value="36" />
        <Setter Property="Width" Value="36" />
        <Setter Property="CornerRadius" Value="{DynamicResource MediumCornerRadius}" />
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Height="{TemplateBinding Height}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Background="{TemplateBinding Background}">
                        <Border.Transitions>
                            <Transitions>
                                <BrushTransition Property="Background" Duration="0:0:0.20" />
                                <DoubleTransition Property="Opacity" Duration="0:0:0.20" />
                            </Transitions>
                        </Border.Transitions>
                        <Panel>
                            <PathIcon Name="PART_ExpandIconLeft"
                                      Width="14"
                                      Height="14"
                                      Data="{x:Static contents:Icons.SidePanel}"
                                      Foreground="{DynamicResource ForegroundColor}">
                                <PathIcon.Transitions>
                                    <Transitions>
                                        <DoubleTransition Property="Opacity" Duration="0:0:0.2" />
                                    </Transitions>
                                </PathIcon.Transitions>
                            </PathIcon>
                            <PathIcon Name="PART_ExpandIconRight"
                                      Width="12"
                                      Height="12"
                                      Data="{x:Static contents:Icons.ChevronLeft}"
                                      Foreground="{DynamicResource ForegroundColor}">
                                <PathIcon.Transitions>
                                    <Transitions>
                                        <DoubleTransition Property="Opacity" Duration="0:0:0.2" />
                                    </Transitions>
                                </PathIcon.Transitions>
                            </PathIcon>
                        </Panel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style Selector="^:pointerover">
            <Setter Property="Background" Value="{DynamicResource PrimaryColor10}" />
        </Style>
        <Style Selector="^[IsChecked=False]">
            <Style Selector="^ /template/ PathIcon#PART_ExpandIconLeft">
                <Setter Property="Opacity" Value="1" />
            </Style>
            <Style Selector="^ /template/ PathIcon#PART_ExpandIconRight">
                <Setter Property="Opacity" Value="0" />
            </Style>
        </Style>
        <Style Selector="^[IsChecked=True]">
            <Style Selector="^ /template/ PathIcon#PART_ExpandIconLeft">
                <Setter Property="Opacity" Value="0" />
            </Style>
            <Style Selector="^ /template/ PathIcon#PART_ExpandIconRight">
                <Setter Property="Opacity" Value="1" />
            </Style>
        </Style>
    </ControlTheme>
    <ControlTheme x:Key="SidebarMenuStyle" TargetType="controls:SidebarMenu">
        <Setter Property="Background" Value="{DynamicResource SidebarBackgroundColor}" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <ControlTemplate>
                <SplitView DisplayMode="CompactInline"
                           IsPaneOpen="{TemplateBinding IsMenuExpanded}"
                           OpenPaneLength="{TemplateBinding OpenPaneLength}">
                    <SplitView.Pane>
                        <Border
                            BorderBrush="{DynamicResource BorderColor}"
                            BorderThickness="0,0,1,0"
                            Margin="{Binding ShowTitlebarBackground, Converter={x:Static converters:WindowBackgroundToMarginConverter.Instance}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:Window}}}">
                            <Grid Background="{TemplateBinding Background}">
                                <Border BorderThickness="0,0,1,0"
                                        CornerRadius="{Binding ShowTitlebarBackground, Converter={x:Static converters:WindowBackgroundToCornerRadiusConverter.Instance}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:Window}}}" />
                                <DockPanel Background="{TemplateBinding Background}">
                                    <ToggleButton Name="PART_SidebarToggleButton"
                                                  Margin="8"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Top"
                                                  Cursor="Hand"
                                                  DockPanel.Dock="Top"
                                                  IsChecked="{TemplateBinding IsMenuExpanded, Mode=TwoWay}"
                                                  BorderBrush="{DynamicResource SidebarBackgroundColor}"
                                                  IsVisible="{TemplateBinding SidebarToggleEnabled}"
                                                  Theme="{StaticResource SideToggleButtonTheme}" />
                                    <Grid MinHeight="{TemplateBinding HeaderMinHeight}"
                                          DockPanel.Dock="Top"
                                          IsVisible="{TemplateBinding IsMenuExpanded}">
                                        <ContentPresenter Content="{TemplateBinding HeaderContent}" />
                                    </Grid>
                                    <ContentControl Margin="0,0,0,12"
                                                    Content="{TemplateBinding FooterContent}"
                                                    DockPanel.Dock="Bottom"
                                                    IsVisible="{TemplateBinding IsMenuExpanded}" />
                                    <DockPanel>
                                        <ScrollViewer Name="PART_ScrollViewer"
                                                      Classes="Stack"
                                                      AllowAutoHide="{TemplateBinding (ScrollViewer.AllowAutoHide)}"
                                                      BringIntoViewOnFocusChange="{TemplateBinding (ScrollViewer.BringIntoViewOnFocusChange)}"
                                                      HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
                                                      HorizontalSnapPointsType="{TemplateBinding (ScrollViewer.HorizontalSnapPointsType)}"
                                                      IsScrollChainingEnabled="{TemplateBinding (ScrollViewer.IsScrollChainingEnabled)}"
                                                      VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}"
                                                      VerticalSnapPointsType="{TemplateBinding (ScrollViewer.VerticalSnapPointsType)}">
                                            <StackPanel extensions:StackPanel.AnimatedScroll="True">
                                                <ItemsPresenter Name="PART_ItemsPresenter"
                                                                Margin="{TemplateBinding Padding}"
                                                                extensions:ItemsPresenter.AnimatedScroll="True"
                                                                ItemsPanel="{TemplateBinding ItemsPanel}" />
                                            </StackPanel>
                                        </ScrollViewer>
                                    </DockPanel>
                                </DockPanel>
                            </Grid>
                        </Border>
                    </SplitView.Pane>
                    <ContentPresenter Content="{TemplateBinding BodyContent}" />
                </SplitView>
            </ControlTemplate>
        </Setter>
        <Style Selector="^[IsToggleButtonVisible=False]">
            <Style Selector="^ /template/ ToggleButton#PART_SidebarToggleButton">
                <Setter Property="Opacity" Value="0" />
                <Setter Property="IsHitTestVisible" Value="False" />
            </Style>
        </Style>
        <Style Selector="^[IsMenuExpanded=True]">
            <Style Selector="^ /template/ ToggleButton#PART_SidebarToggleButton">
                <Setter Property="HorizontalAlignment" Value="Right" />
            </Style>
        </Style>
    </ControlTheme>
    <ControlTheme x:Key="{x:Type controls:SidebarMenu}"
                  BasedOn="{StaticResource SidebarMenuStyle}"
                  TargetType="controls:SidebarMenu" />
</ResourceDictionary>